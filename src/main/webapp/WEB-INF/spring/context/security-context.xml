<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- enable Method level [vs URL level] authorization This work for ROOT 
		WEB APPLICATION Level scanned components Does NOT recognize WEB Application 
		level components - for THAT need to place enable line in Dispatcher-servlet -->
	<security:global-method-security
		pre-post-annotations="enabled" />

	<!-- security:http enables security filter mechanism...name space configuration 
		is activated -->
	<!-- use-expressions enables URL level authorization - allows SPEL syntax -->
	<security:http use-expressions="true">

		<!-- We will just use web.xml error for access-denied -->
		<!-- Other Options to redirect exception for web authorization -->
		<!-- <security:access-denied-handler error-page="/error-forbidden" /> -->

		<!-- Implemented with Web based URL - Controller "METHOD" level authorization -->
		<!-- the more specific rules need to come first, followed by the more general 
			ones. -->
		<!-- COMMENT out the following to see @Service METHOD level authorization -->
		<security:intercept-url pattern="/members/add"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/members"
			access="hasAnyRole('ROLE_ADMIN','ROLE_USER')" />

		<security:form-login login-page="/login"
			login-processing-url="/postLogin" username-parameter="username"
			password-parameter="password" default-target-url="/welcome"
			always-use-default-target="true" authentication-failure-url="/loginfailed" />

		<security:logout logout-success-url="/logout"
			delete-cookies="JSESSIONID" logout-url="/doLogout" />

		<!-- enable remember me -->
		<security:remember-me data-source-ref="dataSource"
			token-validity-seconds="86400" remember-me-parameter="keepMe" />

	</security:http>


	<security:authentication-manager>
		<security:authentication-provider>
			<security:password-encoder hash="bcrypt" />
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select username,password,enabled from users where username=?"
				authorities-by-username-query="select u1.username, u2.authority from users u1, authorities u2 where u1.username = u2.username and u1.username =?" />
		</security:authentication-provider>
	</security:authentication-manager>

</beans>
